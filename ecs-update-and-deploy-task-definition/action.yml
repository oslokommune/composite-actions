name: "Update and optionally deploy ECS task definition"

description: "Downloads an existing ECS task definition, updates the image URI, and optionally deploys the updated task definition to the specified ECS service."

inputs:

  aws-region:
    description: "The AWS region to use."
    required: true

  aws-role-arn:
    description: "The ARN of the IAM role to assume."
    required: true

  cluster-name:
    description: "The name of the ECS service's cluster."
    required: true

  service-name:
    description: "The name of the ECS service to deploy to."
    required: true

  container-name:
    description: "The name of the container defined in the containerDefinitions section of the ECS task definition."
    required: true

  image-repository:
    description: "The name of the ECR repository where the image is stored."
    required: true

  image-tag:
    description: "The tag of the image."
    required: true

  task-definition-name:
    description: "The name of the task definition."
    required: true

  task-definition-file-name:
    description: "The name of the task definition file."
    default: "task-definition.json"

  download-existing-task-definition:
    description: "Download the existing task definition from AWS."
    required: true

  deploy:
    description: "Deploy the task definition. Can be either \"true\" or \"false\"."
    required: true

outputs:

  task-definition-file-name:
    description: "The path to the rendered task definition file."
    value: "${{ steps.update-task-definition.outputs.task-definition }}"

runs:

  using: composite

  steps:

    - name: Configure AWS credentials using the OpenID Connect (OIDC) provider 🔑
      uses: aws-actions/configure-aws-credentials@ececac1a45f3b08a01d2dd070d28d111c5fe6722 # v4.1.0
      with:
        aws-region: "${{ inputs.aws-region }}"
        role-to-assume: "${{ inputs.aws-role-arn }}"
        role-session-name: "${{ github.event.repository.name }}-gha-${{ github.run_id }}"


    - name: Login to Elastic Container Registry (ECR) 🔑
      id: ecr-login
      uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2.0.1


    - if: inputs.download-existing-task-definition == 'true'
      name: Download existing ECS task definition ⚙️
      shell: bash
      run: |
        aws ecs describe-task-definition \
          --task-definition "${{ inputs.task-definition-name }}" \
          --query taskDefinition \
          | jq 'del(.registeredAt, .registeredBy)' > "${{ inputs.task-definition-file-name }}"


    - name: Update ECS task definition with new image URI ⚙️
      id: update-task-definition
      uses: aws-actions/amazon-ecs-render-task-definition@f87d1f66e0c6e10caeeb51f8344a0d25c899c533 # v1.6.2
      with:
        task-definition: "${{ inputs.task-definition-file-name }}"
        container-name: "${{ inputs.container-name }}"
        image: "${{ steps.ecr-login.outputs.registry }}/${{ inputs.image-repository }}:${{ inputs.image-tag }}"


    - if: inputs.deploy == 'true'
      name: Deploy container 🚀
      uses: aws-actions/amazon-ecs-deploy-task-definition@8230edfe842008418c5275908cae75e51d3befb2 # v2.3.0
      with:
        task-definition: "${{ steps.update-task-definition.outputs.task-definition }}"
        service: "${{ inputs.service-name }}"
        cluster: "${{ inputs.cluster-name }}"
        wait-for-service-stability: true
